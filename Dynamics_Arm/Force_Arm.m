function [CollectGF]=Force_Arm(t,q,p,u,s,TF_Global,TransDis_Global,Vel_Global,Jac_Global,Quat_Global)
%% Author: Jiamin Wang; Updated: 2021-12-15;
 
    CollectGF=zeros(numel(q)/2,1);
    ForceNum=2;
    if ForceNum>0
        CollectGF=zeros(numel(q)/2,ForceNum);
    end
    SubGF=zeros(numel(q)/2,1);
    for FCount=1:ForceNum
%SWITCHCASE_

		switch FCount
		    case 1
		        SubFrame=[0];
		        SubSubs=0;
		        if SubFrame(1)~=0
		            SubSubs=[TransDis_Global(:,SubFrame);Vel_Global(:,SubFrame);Quat_Global(:,SubFrame)];
		        end
		        ForceFrameVecJac=ForceFVJac_1(t,q,p,u,s,SubSubs);
		        SubJac=ForceJac_1(t,q,p,u,s,SubSubs);
		        SubEff=ForceEff_1(t,q,p,u,s,SubSubs);
		        if SubFrame(1)~=0
		            JacSubs=Jac_Global(:,:,SubFrame);
		            for sfCount=1:numel(SubFrame)
		                SubJac=SubJac+ForceFrameVecJac(:,:,sfCount)*JacSubs(:,:,sfCount);
		            end
		        end
		        SubGF=SubJac.'*SubEff;
		    case 2
		        SubFrame=[7];
		        SubSubs=0;
		        if SubFrame(1)~=0
		            SubSubs=[TransDis_Global(:,SubFrame);Vel_Global(:,SubFrame);Quat_Global(:,SubFrame)];
		        end
		        ActFrame=[7];
		        RefFrame=[1];
		        SubJac=Jac_Global(1:3,:,ActFrame);
		        SubEff=TF_Global(1:3,1:3,RefFrame)*ForceEff_2(t,q,p,u,s,SubSubs);
		        SubGF=SubJac.'*SubEff;
		end

        CollectGF(:,FCount)=SubGF;
    end

	function out1 = ForceJac_1(t,in2,in3,in4,in5,SUBSVECTOR__)
	%ForceJac_1
	%    OUT1 = ForceJac_1(T,IN2,IN3,IN4,IN5,SUBSVECTOR__)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:05
	out1 = reshape([1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0],[3,3]);
	end

	function out1 = ForceJac_2(t,in2,in3,in4,in5,in6)
	%ForceJac_2
	%    OUT1 = ForceJac_2(T,IN2,IN3,IN4,IN5,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:06
	out1 = 0.0;
	end

	function out1 = ForceEff_1(t,in2,in3,in4,in5,SUBSVECTOR__)
	%ForceEff_1
	%    OUT1 = ForceEff_1(T,IN2,IN3,IN4,IN5,SUBSVECTOR__)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:06
	b1act = in3(4,:);
	q1dev__dt_1_ = in2(4,:);
	q1flex__dt_1_ = in2(5,:);
	q1sup__dt_1_ = in2(6,:);
	out1 = [-b1act.*q1dev__dt_1_;-b1act.*q1flex__dt_1_;-b1act.*q1sup__dt_1_];
	end

	function out1 = ForceEff_2(t,in2,in3,in4,in5,in6)
	%ForceEff_2
	%    OUT1 = ForceEff_2(T,IN2,IN3,IN4,IN5,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:06
	gUncertain = in3(2,:);
	m13 = in3(28,:);
	out1 = [0.0;0.0;-gUncertain.*m13];
	end

	function out1 = ForceFVJac_1(t,in2,in3,in4,in5,SUBSVECTOR__)
	%ForceFVJac_1
	%    OUT1 = ForceFVJac_1(T,IN2,IN3,IN4,IN5,SUBSVECTOR__)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:06
	out1 = 0.0;
	end

	function out1 = ForceFVJac_2(t,in2,in3,in4,in5,in6)
	%ForceFVJac_2
	%    OUT1 = ForceFVJac_2(T,IN2,IN3,IN4,IN5,IN6)
	%    This function was generated by the Symbolic Math Toolbox version 9.1.
	%    14-Apr-2023 20:12:06
	out1 = reshape([1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[3,6]);
	end

end

